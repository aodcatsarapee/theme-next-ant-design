{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a26104927df1da26b5cf.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Form, Icon, Input, Button, Checkbox, Layout, Card } from 'antd';\r\n\r\nclass Index extends React.Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                location.href = \"http://localhost:3000/\";\r\n            }\r\n        });\r\n\r\n       \r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Layout style={{\r\n                height: '100vh',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}>\r\n                <Card style={{ width: 400 }}>\r\n                    <h1>Sign In</h1>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {getFieldDecorator('username', {\r\n                                rules: [{ required: true, message: 'Please input your username!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    placeholder=\"Username\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: 'Please input your Password!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('remember', {\r\n                                valuePropName: 'checked',\r\n                                initialValue: true,\r\n                            })(<Checkbox>Remember me</Checkbox>)}\r\n\r\n                            <a className=\"login-form-forgot\" href=\"\" style={{ float: \"right\" }}>\r\n                                Forgot password</a>\r\n                            <br />\r\n                            <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" icon=\"sign-in\" size=\"large\" block style={{ marginTop: 40 }}>Log In</Button>\r\n                            <center styl3e={{marginTop:20}}>\r\n                                <span>Don't have an account?</span> <a href=\"\">Sign Up!</a>\r\n                            </center>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Index);\r\n\r\nexport default WrappedNormalLoginForm"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA/DA;AACA;AAiEA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}